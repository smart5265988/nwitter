{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfaf0fd1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCoVUqKhO3_Q25UQ8yFdPKpWM3mY4cNIrs',\n  authDomain: 'nwitter-dc4b2.firebaseapp.com',\n  projectId: 'nwitter-dc4b2',\n  storageBucket: 'nwitter-dc4b2.appspot.com',\n  messagingSenderId: '305977935940',\n  appId: '1:305977935940:web:e26f33f131bf851048d411',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password,\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? 'Create Account' : 'Sign In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","// import { authService, firebaseInstance } from 'fbase';\n// import React, { useState } from 'react';\n\n// const Auth = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [newAccount, setNewAccount] = useState(true);\n//   const [error, setError] = useState('');\n//   const onChange = (event) => {\n//     const {\n//       target: { name, value },\n//     } = event;\n//     if (name === 'email') {\n//       setEmail(value);\n//     } else if (name === 'password') {\n//       setPassword(value);\n//     }\n//   };\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       let data;\n//       if (newAccount) {\n//         data = await authService.createUserWithEmailAndPassword(\n//           email,\n//           password,\n//         );\n//       } else {\n//         data = await authService.signInWithEmailAndPassword(email, password);\n//       }\n//       console.log(data);\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n//   const toggleAccount = () => setNewAccount((prev) => !prev);\n\n//   const onSocialClick = async (event) => {\n//     const {\n//       target: { name },\n//     } = event;\n//     let provider;\n//     if (name === 'google') {\n//       provider = new firebaseInstance.auth.GoogleAuthProvider();\n//     } else if (name === 'github') {\n//       provider = new firebaseInstance.auth.GithubAuthProvider();\n//     }\n//     const data = await authService.signInWithPopup(provider);\n//     console.log(data);\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={onSubmit}>\n//         <input\n//           name=\"email\"\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           required\n//           value={email}\n//           onChange={onChange}\n//         ></input>\n//         <input\n//           name=\"password\"\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           required\n//           value={password}\n//           onChange={onChange}\n//         ></input>\n//         <input\n//           type=\"submit\"\n//           value={newAccount ? 'Create Account' : 'Log In'}\n//         ></input>\n//         {error}\n//       </form>\n//       <span onClick={toggleAccount}>\n//         {newAccount ? 'Sign in' : 'Create Account'}\n//       </span>\n//       <div>\n//         <button onClick={onSocialClick} name=\"google\">\n//           Continue with Google\n//         </button>\n//         <button onClick={onSocialClick} name=\"github\">\n//           Continue with Github\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Auth;\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","// import { dbService, storageService } from 'fbase';\n// import React, { useState } from 'react';\n\n// const Nweet = ({ nweetObj, isOwner }) => {\n//   const [editing, setEditing] = useState(false);\n//   const [newNweet, setNewNweet] = useState(nweetObj.text);\n//   const onDeleteClick = async () => {\n//     const ok = window.confirm('삭제하겠습니까?');\n//     // console.log(ok);\n//     if (ok) {\n//       await dbService.doc(`nweets/${nweetObj.id}`).delete();\n//       await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n//     }\n//   };\n//   const toggleEditing = () => setEditing((prev) => !prev);\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n//     // console.log(nweetObj, newNweet);\n//     await dbService.doc(`nweets/${nweetObj.id}`).update({\n//       text: newNweet,\n//     });\n//     setEditing(false);\n//   };\n//   const onChange = (event) => {\n//     const {\n//       target: { value },\n//     } = event;\n//     setNewNweet(value);\n//   };\n//   return (\n//     <div>\n//       {editing ? (\n//         <>\n//           <form onSubmit={onSubmit}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"수정하세요\"\n//               value={newNweet}\n//               required\n//               onChange={onChange}\n//             />\n//             <input type=\"submit\" value=\"Update Nweet\" />\n//           </form>\n//           <button onClick={toggleEditing}>Cancel</button>\n//         </>\n//       ) : (\n//         <>\n//           <h4>{nweetObj.text}</h4>\n//           {nweetObj.attachmentUrl && (\n//             <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n//           )}\n//           {isOwner && (\n//             <>\n//               <button onClick={onDeleteClick}>Delete Nweet</button>\n//               <button onClick={toggleEditing}>Edit Nweet</button>\n//             </>\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Nweet;\nimport React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const onSubmit = async (event) => {\n    if (nweet === '') {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment('');\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","// import React, { useEffect, useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n// import { dbService, storageService } from 'fbase';\n// import Nweet from 'components/Nweet';\n\n// const Home = ({ userObj }) => {\n//   const [nweet, setNweet] = useState('');\n//   const [nweets, setNweets] = useState([]);\n//   const [attachment, setAttachment] = useState('');\n//   useEffect(() => {\n//     dbService.collection('nweets').onSnapshot((snapshot) => {\n//       const nweetArray = snapshot.docs.map((doc) => ({\n//         id: doc.id,\n//         ...doc.data(),\n//       }));\n//       setNweets(nweetArray);\n//     });\n//   }, []);\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n//     let attachmentUrl = '';\n//     if (attachment !== '') {\n//       const attachmentRef = storageService\n//         .ref()\n//         .child(`${userObj.uid}/${uuidv4()}`);\n//       const response = await attachmentRef.putString(attachment, 'data_url');\n//       attachmentUrl = await response.ref.getDownloadURL();\n//     }\n//     const nweetObj = {\n//       text: nweet,\n//       createdAt: Date.now(),\n//       creatorId: userObj.uid,\n//       attachmentUrl,\n//     };\n//     await dbService.collection('nweets').add(nweetObj);\n//     setNweet('');\n//     setAttachment('');\n//   };\n//   const onChange = (event) => {\n//     const {\n//       target: { value },\n//     } = event;\n//     setNweet(value);\n//   };\n//   const onFileChange = (event) => {\n//     const {\n//       target: { files },\n//     } = event;\n//     const theFile = files[0];\n//     const reader = new FileReader();\n//     reader.onloadend = (finishedEvent) => {\n//       const {\n//         currentTarget: { result },\n//       } = finishedEvent;\n//       setAttachment(result);\n//     };\n//     reader.readAsDataURL(theFile);\n//   };\n\n//   const onClearAttachment = () => {\n//     setAttachment(null);\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={onSubmit}>\n//         <input\n//           value={nweet}\n//           type=\"text\"\n//           placeholder=\"What`s on your mind?\"\n//           maxLength={120}\n//           onChange={onChange}\n//         />\n//         <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n//         <input type=\"submit\" value=\"Nweet\" />\n//         {attachment && (\n//           <div>\n//             <img src={attachment} width=\"50px\" height=\"50px\"></img>\n//             <button onClick={onClearAttachment}>Clear</button>\n//           </div>\n//         )}\n//       </form>\n//       <div>\n//         {nweets.map((nweet) => (\n//           <Nweet\n//             key={nweet.id}\n//             nweetObj={nweet}\n//             isOwner={nweet.creatorId === userObj.uid}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n// export default Home;\nimport React, { useState, useEffect } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection('nweets').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","// import { authService, dbService } from 'fbase';\n// import React, { useState, useEffect } from 'react';\n// import { useHistory } from 'react-router';\n\n// export default ({ refreshUser, userObj }) => {\n//   const history = useHistory();\n//   const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n//   const onLogOutClick = () => {\n//     authService.signOut();\n//     history.push('/');\n//   };\n//   // const getMyNweets = async () => {\n//   //   const nweets = await dbService\n//   //     .collection('nweets')\n//   //     .where('creatorId', '==', userObj.uid)\n//   //     .orderBy('createdAt')\n//   //     .get();\n//   //   console.log(nweets.docs.map((doc) => doc.data()));\n//   // };\n//   // useEffect(() => {\n//   //   getMyNweets();\n//   // }, []);\n\n//   const onChange = (event) => {\n//     const {\n//       target: { value },\n//     } = event;\n//     setNewDisplayName(value);\n//   };\n\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n//     if (userObj.displayName !== newDisplayName) {\n//       await userObj.updateProfile({\n//         disPlayName: newDisplayName,\n//       });\n//       refreshUser();\n//     }\n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={onSubmit}>\n//         <input\n//           onChange={onChange}\n//           type=\"text\"\n//           placeholder=\"Display name\"\n//           value={newDisplayName}\n//         />\n//         <input type=\"submit\" value=\"Update Profile\" />\n//       </form>\n//       <button onClick={onLogOutClick}>Log Out</button>\n//     </>\n//   );\n// };\n\nimport React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// const Navigation = ({ userObj }) => (\n//   <nav>\n//     <ul>\n//       <li>\n//         <Link to=\"/\">Home</Link>\n//       </li>\n\n//       <li>\n//         <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n//       </li>\n//     </ul>\n//   </nav>\n// );\n// export default Navigation;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : 'Profile'}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","// import React from 'react';\n// import { HashRouter as Router, Route, Switch } from 'react-router-dom';\n// import Auth from '../routes/Auth';\n// import Home from '../routes/Home';\n// import Profile from 'routes/Profile';\n// import Navigation from 'components/Navigation';\n\n// const AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n//   return (\n//     <Router>\n//       {isLoggedIn && <Navigation userObj={userObj} />}\n//       <Switch>\n//         {isLoggedIn ? (\n//           <>\n//             <Route exact path=\"/\">\n//               <Home userObj={userObj} />\n//             </Route>\n//             <Route exact path=\"/profile\">\n//               <Profile userObj={userObj} />\n//             </Route>\n//           </>\n//         ) : (\n//           <>\n//             <Route exact path=\"/\">\n//               <Auth />\n//             </Route>\n//           </>\n//         )}\n//       </Switch>\n//     </Router>\n//   );\n// };\n\n// export default AppRouter;\n\nimport React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","// import React, { useEffect, useState } from 'react';\n// // import { Route } from 'react-router';\n// import AppRouter from 'components/Router';\n// import { authService } from '../fbase';\n\n// function App() {\n//   const [init, setInit] = useState(false);\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [userObj, setUserObj] = useState(null);\n//   useEffect(() => {\n//     authService.onAuthStateChanged((user) => {\n//       if (user) {\n//         // setIsLoggedIn(true);\n//         setUserObj({\n//           displayName: user.displayName,\n//           uid: user.uid,\n//           updateProfile: (args) => user.updateProfile(args),\n//         });\n//       } else {\n//         setIsLoggedIn(false);\n//       }\n//       setInit(true);\n//     });\n//   }, []);\n//   const refreshUser = () => {\n//     const user = authService.currentUser;\n//     setUserObj(authService.currentUser);\n//   };\n//   return (\n//     <>\n//       {init ? (\n//         <AppRouter\n//           refreshUser={refreshUser}\n//           isLoggedIn={Boolean(userObj)}\n//           userObj={userObj}\n//         />\n//       ) : (\n//         'Initializing....'\n//       )}\n//     </>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './components/App';\n// import fbase from './fbase';\n// // console.log(firebase);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// );\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}